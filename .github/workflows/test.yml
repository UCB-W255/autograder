name: test
on:
    push:
jobs:
  # Run test suite against python
  ## Checks out code from repo
  ## Installs Python, Poetry and caches binary unless we change poetry-version
  ## installs a virtual environment and caches it if no changes to poetry.lock
  ## Runs the pre-commit hooks provided
  ## Injects Pytest test cases
  ## [TODO] submit test results to Slackbot API
  python-testing:
    timeout-minutes: 5
    strategy:
        fail-fast: false
        matrix:
            python-version: ["3.11"]
            poetry-version: ["1.5.1"]
    runs-on:
        group: Default
    steps:
        #################
        ### Checkout
        #################
        - uses: actions/checkout@v3
        #################
        ### Python
        #################
        - name: Set up python ${{ matrix.python-version }}
          id: setup-python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        #################
        ### Poetry
        #################
        - name: Load cached Poetry Binary
          id: cached-poetry-binary
          uses: actions/cache@v3
          with:
            path: ~/.local
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ matrix.poetry-version }}
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            version: ${{ matrix.poetry-version }}
            virtualenvs-create: true
            virtualenvs-in-project: true
        #################
        ### Virtual Env
        #################
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            restore-keys: |
              venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          shell: bash
          run: poetry install --no-interaction --no-root
        #################
        ### Pre-Commit Hooks (.pre-commit-config.yaml)
        #################
        - name: cache pre-commit deps
          id: cache_pre_commit
          uses: actions/cache@v3
          env:
            cache-name: cache-pre-commit
          with:
            path: |
              .pre_commit_venv
              ~/.cache/pre-commit
            key: ${{ env.cache-name }}-${{ hashFiles('.pre-commit-config.yaml','~/.cache/pre-commit/*') }}
        - name: install pre-commit
          if: steps.cache_pre_commit.outputs.cache-hit != 'true'
          run: |
            python -m venv .pre_commit_venv
            . .pre_commit_venv/bin/activate
            pip install --upgrade pip
            pip install pre-commit
            pre-commit install --install-hooks
            pre-commit gc
        - name: run pre-commit hooks
          run: |
            . .pre_commit_venv/bin/activate
            pre-commit run --color=always --all-files
            deactivate
        #################
        ### pytest
        #################
        - name: Run Pytest
          shell: bash
          run: poetry run pytest
  # Run test suite against Dockerfile
  ## Checks out code from repo
  ## Installs docker build
  ## builds container
  ## Runs container-structure-test
  ## [TODO] submit test results to Slackbot API
  container-testing:
    timeout-minutes: 5
    strategy:
        fail-fast: false
    runs-on:
        group: Default
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
        #################
        ### Checkout
        #################
        - uses: actions/checkout@v3
        #################
        ### container tests
        #################
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            load: true
            tags: user/app:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: Run Container Tests
          uses: plexsystems/container-structure-test-action@v0.3.0
          with:
            image: user/app:latest
            config: container-tests-config.yaml
