name: test
on: 
    push:
jobs:
  ci:
    timeout-minutes: 5
    strategy:
        fail-fast: false
        matrix:
            python-version: ["3.11"]
            poetry-version: ["1.5.1"]
    runs-on: 
        group: Default
    steps:
        - uses: actions/checkout@v3
        - name: Set up python ${{ matrix.python-version }}
          id: setup-python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - name: Load cached Poetry Binary
          id: cached-poetry-binary
          uses: actions/cache@v3
          with:
            path: ~/.local
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ matrix.poetry-version }}
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            version: ${{ matrix.poetry-version }}
            virtualenvs-create: true
            virtualenvs-in-project: true
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            restore-keys: |
              venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          shell: bash
          run: poetry install --no-interaction --no-root