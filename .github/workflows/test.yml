name: test
on:
  push:

env:
  working-directory: lab1

defaults:
  run:
    working-directory: lab1

jobs:
  # Run test suite against python
  ## Checks out code from repo
  ## Installs Python, Poetry and caches binary unless we change poetry-version
  ## installs a virtual environment and caches it if no changes to poetry.lock
  ## Runs the pre-commit hooks provided
  ## Injects Pytest test cases
  ## [TODO] submit test results to Slackbot API
  python-testing:
    runs-on:
      group: Default
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.6.1"]
    steps:
      #################
      ### Checkout
      #################
      - uses: actions/checkout@v3
      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: UCB-W255/autograder
          path: ./autograder
      #################
      ### Python
      #################
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #################
      ### Poetry
      #################
      - name: Load cached Poetry Binary
        id: cached-poetry-binary
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ matrix.poetry-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      #################
      ### Virtual Env
      #################
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        shell: bash
        run: poetry install --no-interaction --no-root
      #################
      ### Pre-Commit Hooks (.pre-commit-config.yaml)
      #################
      - name: Add pre-commit file
        run: |
          mv ${GITHUB_WORKSPACE}/autograder/.pre-commit-config.yaml .
      - name: Install pre-commit
        run: |
          python -m venv .pre_commit_venv
          . .pre_commit_venv/bin/activate
          pip install --upgrade pip
          pip install pre-commit
          pre-commit install --install-hooks
          pre-commit gc
      - name: Run pre-commit hooks
        run: |
          . .pre_commit_venv/bin/activate
          pre-commit run --color=always --all-files
          deactivate
      #################
      ### Add Solution test
      #################
      - name: Move Pytest Files
        run: |
          mv ${GITHUB_WORKSPACE}/autograder/tests/test_${{ env.working-directory }}.py ./tests/
      - name: Fix Import for Pytest Files
        run: |
          find ./tests/ \( -type d -name .git -prune \) -o -type f -print0 | xargs -0 sed -i 's/autograder/src/g'
      #################
      ### pytest
      #################
      - name: Run Pytest
        shell: bash
        run: poetry run pytest -v
  # Run test suite against Dockerfile
  ## Checks out code from repo
  ## Installs docker build
  ## builds container
  ## Runs container-structure-test
  ## [TODO] submit test results to Slackbot API
  container-testing:
    runs-on:
      group: Default
    timeout-minutes: 5
    strategy:
      fail-fast: false
    steps:
      #################
      ### Checkout
      #################
      - uses: actions/checkout@v3
      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: UCB-W255/autograder
          path: ./autograder
      #################
      ### Container Build
      #################
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "${{ env.working-directory }}/."
          push: false
          load: true
          tags: user/app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      #################
      ### Container Tests
      #################
      - name: Move Container Test Files
        run: |
          mv ${GITHUB_WORKSPACE}/autograder/container-tests-config.yaml .
      - name: Run Container Tests
        uses: plexsystems/container-structure-test-action@v0.3.0
        with:
          image: user/app:latest
          config: "${{ env.working-directory }}/container-tests-config.yaml"
